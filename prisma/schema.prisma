generator client {
  provider = "cargo prisma"
  output   = "../src/prisma.rs"
}

datasource db {
  provider = "mongodb"
  url      = env("DB_URL")
}

model User {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  createdAt    DateTime      @default(now())
  wechatOpenId String        @unique
  duckHistory  DuckHistory[]
  ranking      Ranking?
}

// which user discovered which duck
model DuckHistory {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  userId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  duckId    String   @db.ObjectId
  duck      Duck     @relation(fields: [duckId], references: [id], onDelete: Cascade)

  // allow only recording
  @@unique([userId, duckId])
}

model Duck {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // duck meta info
  title          Json
  story          Json
  location       Location?
  topics         Json
  duckIconUrl    String
  isHidden       Boolean   @default(false)
  relatedExhibit Exhibit?

  // history of duck being viewed
  viewHistory DuckHistory[]

  // possible sequences of stories
  nextDuckStory   Duck?   @relation("StorySequence")
  prevDuckStory   Duck?   @relation("StorySequence", fields: [prevDuckStoryId], references: [id], onUpdate: NoAction, onDelete: NoAction)
  prevDuckStoryId String? @unique @db.ObjectId
}

model Location {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  description Json
  coordinate  Json
  duckId      String? @unique @db.ObjectId
  duck        Duck?   @relation(fields: [duckId], references: [id])
}

model Exhibit {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // exhibits meta info
  location Json
  title    Json
  sign     Json
  artists  Json

  relatedDuckId String? @unique @db.ObjectId
  relatedDuck   Duck?   @relation(fields: [relatedDuckId], references: [id])
}

model Ranking {
  id               String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt        DateTime @default(now())
  userWechatOpenId String   @unique
  user             User     @relation(fields: [userWechatOpenId], references: [wechatOpenId])
  ranking          Int
}
